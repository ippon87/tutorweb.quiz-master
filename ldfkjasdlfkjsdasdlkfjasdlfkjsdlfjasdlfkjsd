[33mcommit 6bdb4f04fb6b3bf16b6c66855148d3cb3ef3e71b[m
Author: ippon87 <sob15@hi.is>
Date:   Wed Jul 17 16:25:11 2013 +0000

    now all the grades give numbers

[1mdiff --git a/tutorweb/quiz/browser/resources/grade.js b/tutorweb/quiz/browser/resources/grade.js[m
[1mindex 488700d..e95c7a1 100644[m
[1m--- a/tutorweb/quiz/browser/resources/grade.js[m
[1m+++ b/tutorweb/quiz/browser/resources/grade.js[m
[36m@@ -1,11 +1,10 @@[m
[31m-[m
 //Use: var x = lastEight(answers)[m
 //Before: answers is an array with the answer pattern, 0 for wrong 1 for right[m
 //After: x is a 2 item array, the first item is the current score[m
 //the second is what the score will be if you answer correctly[m
 function lastEight(answers) [m
 {[m
[31m-	var nomans = answers.slice();    //make a copy so the original is not touched[m
[32m+[m[32m    var nomans = answers.slice();    //make a copy so the original is not touched[m
 	if(nomans.length < 8)	//increase the size of the array if needed[m
 	{[m
 		while(nomans.length < 8) [m
[36m@@ -109,7 +108,7 @@[m [mfunction bestEight(answers, d)[m
     //print(cumsum); [m
     //print(sum);[m
 	returner = (Math.round((sum*10)*4)/4).toFixed(2);[m
[31m-	grade[0] = returner;[m
[32m+[m	[32mgrade[0] = parseFloat(returner);[m
     //print(answers);[m
     nomans = answers.slice();[m
    nomans.splice(0,0,1); // Next answer: ToDo can this be optimized?[m
[36m@@ -146,6 +145,69 @@[m [mfunction bestEight(answers, d)[m
     //print(cumsum); [m
     //print(sum);[m
 	returner = (Math.round((sum*10)*4)/4).toFixed(2);[m
[31m-	grade[1] = returner;[m
[32m+[m	[32mgrade[1] = parseFloat(returner);[m
 	return grade;  [m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//Use: var vector = averageWeights(answers);[m
[32m+[m[32m//Before: answers is an array with items consisting of 1's of 0's[m
[32m+[m[32m//After: vetor is a 2 item array giving a grade from 1-10 by using the formula:[m
[32m+[m[32m// (sum of n first items) / n * 10, where n = total number of items / 2.[m
[32m+[m[32mfunction averageWeights(answers)[m
[32m+[m[32m{[m
[32m+[m[32m        var nomans = answers.slice();	//make a copy so as to not change the original[m
[32m+[m[32m        var t = nomans.length;		//likely redundant[m
[32m+[m[32m        var sum = 0;[m[41m		[m
[32m+[m[32m        var n = Math.round(nomans.length/2); //divider for average[m
[32m+[m[32m        var grade = new Array();[m
[32m+[m[32m        if(nomans.length < 8){		//push 0 until 8[m
[32m+[m[32m            while(nomans.length < 8){[m
[32m+[m[32m                nomans.push(0);[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m[41m         [m
[32m+[m[32m        if(nomans.length <= 16){	// works just like lastEight();[m
[32m+[m[32m            for(i = 0; i<8; i++)[m
[32m+[m[32m                sum += nomans[i];[m[41m    [m
[32m+[m[32m            sum = (Math.round((sum/8*10)*4)/4).toFixed(2);[m
[32m+[m[32m            grade[0] = parseFloat(sum);[m
[32m+[m[32m        }[m
[32m+[m[32m        else if(nomans.length <= 60){	// takes more answers into your grade the more you try[m
[32m+[m[32m            for (i=0; i<n; i++)[m
[32m+[m[32m                sum += nomans[i];[m
[32m+[m[32m            sum = (Math.round((sum/n*10)*4)/4).toFixed(2);[m[41m  [m
[32m+[m[32m            grade[0] = parseFloat(sum);[m
[32m+[m[32m        }[m[41m [m
[32m+[m[32m        else{[m
[32m+[m[32m            for(i=0; i<30; i++)		// peaks at 60+ answers taking the first 30 answers into the grade[m
[32m+[m[32m                sum += nomans[i];[m
[32m+[m[32m            sum = (Math.round((sum/30*10)*4)/4).toFixed(2);[m
[32m+[m[32m            grade[0] = parseFloat(sum);[m
[32m+[m[32m        }[m
[32m+[m[32m        nomans.splice(0,0,1);		//ToDo: just like the others, this might be better, however not in its current state[m
[32m+[m[32m        sum = 0;[m
[32m+[m[32m        n= Math.round(nomans.length /2);[m
[32m+[m[32m        if(nomans.length < 8){[m
[32m+[m[32m            while(nomans.length < 8){[m
[32m+[m[32m                nomans.push(0);[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m[41m         [m
[32m+[m[32m        if(nomans.length <= 16){[m
[32m+[m[32m            for(i = 0; i<8; i++)[m
[32m+[m[32m                sum += nomans[i];[m[41m    [m
[32m+[m[32m            sum = (Math.round((sum/8*10)*4)/4).toFixed(2);[m
[32m+[m[32m            grade[1] = parseFloat(sum);[m
[32m+[m[32m        }[m
[32m+[m[32m        else if(nomans.length <= 60){[m
[32m+[m[32m            for (i=0; i<n; i++)[m
[32m+[m[32m                sum += nomans[i];[m
[32m+[m[32m            sum = (Math.round((sum/n*10)*4)/4).toFixed(2);[m[41m  [m
[32m+[m[32m            grade[1] = parseFloat(sum);[m
[32m+[m[32m        }[m[41m [m
[32m+[m[32m        else{[m
[32m+[m[32m            for(i=0; i<30; i++)[m
[32m+[m[32m                sum += nomans[i];[m
[32m+[m[32m            sum = (Math.round((sum/30*10)*4)/4).toFixed(2);[m
[32m+[m[32m            grade[1] = parseFloat(sum);[m
[32m+[m[32m        }[m
[32m+[m[32m    return grade;[m
 }[m
\ No newline at end of file[m
